<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 引入配置文件  -->
	<context:property-placeholder location="classpath:config.properties" />
	
    <!-- 配置数据源 -->
    <!-- <bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
        <property name="driver" value="${jdbc.driver}" />
        <property name="driverUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="minimumConnectionCount" value="${jdbc.minConnection}" />
        <property name="maximumConnectionCount" value="${jdbc.maxConnection}" />
        <property name="maximumConnectionLifetime" value="${jdbc.maxConnectionLife}" />
        <property name="maximumActiveTime" value="${jdbc.maxActiveTime}" />
        <property name="prototypeCount" value="${jdbc.prototypeCount}" />
        <property name="houseKeepingTestSql" value="${jdbc.testSql}" />
    </bean> -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" >
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="minIdle" value="${jdbc.minIdle}" />        
		<property name="maxIdle" value="${jdbc.maxIdle}" />       
		<property name="maxWait" value="${jdbc.maxWait}" />        
		<property name="maxActive" value="${jdbc.maxActive}" />    
		<property name="initialSize" value="${jdbc.initialSize}" /> 
	</bean> 

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 注解方式配置事物 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 注解解析 -->
	<context:annotation-config />
	
	<!-- 扫描所有spring bean注解 -->
    <context:component-scan base-package="bhz" />
	
	<!-- 动态代理 -->
	<aop:aspectj-autoproxy/>
	
	<!-- 配置dubbo服务 -->
	<import resource="classpath:dubbo-provider.xml" />
	
	<!-- 支持自动扫描Mapper.xml功能，不用在 sqlMapConfig.xml 配置相关信息-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:mappers/*Mapper.xml"></property>
	</bean>
	
	<!-- DAO接口所在包名，Spring会自动查找其下的类 
		支持自动生成操作，不要让生成的*Mapper.java与对象基本dao一个包，防止混淆
	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="bhz.sys.dao" />
		<!-- 一定要用value="sqlSessionFactory" 使用ref会导致${jdbc.password}失效 -->
		<!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>   -->
		<!-- 只扫描 注解为vincentdao -->
		<property name="annotationClass" value="bhz.comm.anno.VincentDao"></property>
		<property name="sqlSessionTemplateBeanName" value="sqlSessionTemplate"/>
	</bean>
	<!-- 配置SQLSession模板 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" /> 
	</bean>
</beans>